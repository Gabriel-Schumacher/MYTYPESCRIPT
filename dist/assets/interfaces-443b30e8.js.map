{"version":3,"file":"interfaces-443b30e8.js","sources":["../../src/interfaces/interfaces.ts"],"sourcesContent":["import curriculum from \"../data/curriculum.json\";\r\n\r\nconst blocks = curriculum[\"responsive-web-design\"].blocks;\r\n\r\nconst blocksArray = Object.values(blocks);\r\nconst [basicCss, basicHTML, flexbox, grid] = blocksArray;\r\n\r\nlet cssPosition: number = 0;\r\nlet htmlPosition: number = 0;\r\nlet flexboxPosition: number = 0;\r\nlet gridPosition: number = 0;\r\n\r\nlet currentBlock: string;\r\n\r\nconst videoFrame = document.querySelector(\r\n  \"#challengeVid\"\r\n)! as HTMLIFrameElement;\r\nconst prevButton = document.querySelector(\"#prevButton\")! as HTMLButtonElement;\r\nconst nextButton = document.querySelector(\"#nextButton\")! as HTMLButtonElement;\r\nconst challengeVidBtn = document.querySelector(\"#challengeVidBtn\")!;\r\nconst topMenu = document.querySelector(\".menu\")!;\r\n\r\ninterface VideoDisplayer {\r\n  videoUrl: string;\r\n  display(theFrame: HTMLIFrameElement): void;\r\n}\r\n\r\nclass CodeSnippet implements VideoDisplayer {\r\n  constructor(\r\n    public title: string,\r\n    public description: string,\r\n    public instruction: string,\r\n    public videoUrl: string\r\n  ) {}\r\n  display(theFrame: HTMLIFrameElement): void {\r\n    theFrame.src = this.videoUrl;\r\n  }\r\n}\r\n\r\nconst basicCssSnippets = basicCss.challenges.map((challenge: any) => {\r\n  return new CodeSnippet(\r\n    challenge.title,\r\n    challenge.description,\r\n    challenge.instructions,\r\n    challenge.videoUrl\r\n  );\r\n});\r\n\r\nconst basicHTMLSnippets = basicHTML.challenges.map((challenge: any) => {\r\n  return new CodeSnippet(\r\n    challenge.title,\r\n    challenge.description,\r\n    challenge.instructions,\r\n    challenge.videoUrl\r\n  );\r\n});\r\n\r\nconst flexboxSnippets = flexbox.challenges.map((challenge: any) => {\r\n  return new CodeSnippet(\r\n    challenge.title,\r\n    challenge.description,\r\n    challenge.instructions,\r\n    challenge.videoUrl\r\n  );\r\n});\r\n\r\nconst gridSnippets = grid.challenges.map((challenge: any) => {\r\n  return new CodeSnippet(\r\n    challenge.title,\r\n    challenge.description,\r\n    challenge.instructions,\r\n    challenge.videoUrl\r\n  );\r\n});\r\n\r\nconst populateMenu = (arrayOfBlocks: any[]) => {\r\n  arrayOfBlocks.forEach((block) => {\r\n    const menuItem = document.createElement(\"li\");\r\n    const menuLink = document.createElement(\"a\");\r\n    menuLink.textContent = block?.meta?.name;\r\n\r\n    menuLink.addEventListener(\"click\", () => {\r\n      const allMenuLinks = document.querySelectorAll(\".menu li a\");\r\n      allMenuLinks.forEach((link) => {\r\n        link.classList.remove(\"active\");\r\n      });\r\n      menuLink.classList.add(\"active\");\r\n      currentBlock = block?.meta?.name;\r\n      const snippet = getCurrentSnippet(currentBlock);\r\n      if (snippet) {\r\n        snippet.display(videoFrame);\r\n        challengeVidBtn.textContent = snippet.title;\r\n      }\r\n    });\r\n\r\n    menuItem.appendChild(menuLink);\r\n    topMenu.appendChild(menuItem);\r\n  });\r\n};\r\n\r\npopulateMenu(blocksArray);\r\n\r\nconst getCurrentSnippet = (block: string) => {\r\n  if (block === \"Basic CSS\") {\r\n    return basicCssSnippets[cssPosition];\r\n  } else if (block === \"Basic HTML and HTML5\") {\r\n    return basicHTMLSnippets[htmlPosition];\r\n  } else if (block === \"CSS Flexbox\") {\r\n    return flexboxSnippets[flexboxPosition];\r\n  } else if (block === \"CSS Grid\") {\r\n    return gridSnippets[gridPosition];\r\n  } else {\r\n    return new CodeSnippet(\"\", \"\", \"\", \"\");\r\n  }\r\n};\r\n\r\nconst updatePosition = (direction: string) => {\r\n  if (currentBlock === \"Basic CSS\") {\r\n    if (direction === \"next\") {\r\n      if (cssPosition < basicCssSnippets.length - 1) {\r\n        cssPosition++;\r\n      }\r\n    } else {\r\n      if (cssPosition > 0) {\r\n        cssPosition--;\r\n      }\r\n    }\r\n  }\r\n  if (currentBlock === \"Basic HTML and HTML5\") {\r\n    if (direction === \"next\") {\r\n      if (htmlPosition < basicHTMLSnippets.length - 1) {\r\n        htmlPosition++;\r\n      }\r\n    } else {\r\n      if (htmlPosition > 0) {\r\n        htmlPosition--;\r\n      }\r\n    }\r\n  }\r\n  if (currentBlock === \"CSS Flexbox\") {\r\n    if (direction === \"next\") {\r\n      if (flexboxPosition < flexboxSnippets.length - 1) {\r\n        flexboxPosition++;\r\n      }\r\n    } else {\r\n      if (flexboxPosition > 0) {\r\n        flexboxPosition--;\r\n      }\r\n    }\r\n  }\r\n  if (currentBlock === \"CSS Grid\") {\r\n    if (direction === \"next\") {\r\n      if (gridPosition < gridSnippets.length - 1) {\r\n        gridPosition++;\r\n      }\r\n    } else {\r\n      if (gridPosition > 0) {\r\n        gridPosition--;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nnextButton.addEventListener(\"click\", () => {\r\n  updatePosition(\"next\");\r\n  const snippet = getCurrentSnippet(currentBlock);\r\n  if (snippet) {\r\n    snippet.display(videoFrame);\r\n    challengeVidBtn.textContent = snippet.title;\r\n  }\r\n});\r\n\r\nprevButton.addEventListener(\"click\", () => {\r\n  updatePosition(\"prev\");\r\n  const snippet = getCurrentSnippet(currentBlock);\r\n  if (snippet) {\r\n    snippet.display(videoFrame);\r\n    challengeVidBtn.textContent = snippet.title;\r\n  }\r\n});\r\n"],"names":["blocks","curriculum","blocksArray","basicCss","basicHTML","flexbox","grid","cssPosition","htmlPosition","flexboxPosition","gridPosition","currentBlock","videoFrame","prevButton","nextButton","challengeVidBtn","topMenu","CodeSnippet","title","description","instruction","videoUrl","theFrame","basicCssSnippets","challenge","basicHTMLSnippets","flexboxSnippets","gridSnippets","populateMenu","arrayOfBlocks","block","menuItem","menuLink","_a","link","snippet","getCurrentSnippet","updatePosition","direction"],"mappings":"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"}